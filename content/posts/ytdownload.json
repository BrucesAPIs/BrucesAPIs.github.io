{
    "title": "YT-Downloader",
    "slug": "ytdownloader",
    "date": "2025-01-18",
    "excerpt":"download YouTube videos and audio! The YT-Downloader API supports customizable video resolutions and exports in high-quality M4A and MP4 formats. ",
    "rapidapi_link": "https://rapidapi.com/brucewwx/api/yt-downloader9",
    "content": "Our API offers:\n\n- **Video Downloads**: Support for multiple resolution options, allowing you to choose the ideal video quality based on your needs and ensuring an optimal viewing experience.\n- **Audio Downloads**: Convert videos into high-quality M4A audio format, making it easy to enjoy music on various devices without taking up additional storage space.\n- **User-Friendly Interface**: The API is designed for simplicity and ease of integration, allowing developers to get started quickly without cumbersome setup processes.\n- **Fast and Stable Performance**: We are committed to providing a fast and reliable downloading service, ensuring users have the best experience while using our API.\n\nWhether you are an individual user, app developer, or digital content creator, YT-Downloader is your ideal solution for accessing and managing YouTube content. Let YT-Downloader help you capture and enjoy your favorite multimedia effortlessly!\n\n\n\n## API Endpoints\n\nBefore reading endpoints, you should look into the workflow:\n![image](https://i.imgur.com/fygdGki.png)\n\n### 1. Start a New Download\n\n`POST /start`\n\nStart the process of downloading videos or audio from YouTube.\n\n\n\n#### Request Body\n```json\n{\n  \"urls\": [\"url1\", \"url2\"],\n  \"onlyAudio\": boolean,\n  \"ignorePlaylists\": boolean,\n  \"videoQuality\": \"best\" | \"fhd\" | \"hd\"\n}\n```\n- **`urls`**: An array of YouTube video URLs to be downloaded.\n- **`onlyAudio`**: Specifies whether to download only audio (true/false).\n- **`ignorePlaylists`**: If true, ignores any playlists in the provided URLs.\n- **`videoQuality`**: Defines the desired video quality. Acceptable values are \"best\", \"fhd\", or \"hd\".\n\n#### Response\n```json\n{\n  \"uid\": \"download-id\"\n}\n```\n- **`uid`**: A unique identifier for the download process.\n\nPlease notice the endpoint may need to wait over 3s to get response.\n\n---\n\n### 2. Get Download Status\n\n`GET /status/:uid`\n\nRetrieve the current status of the download process.\n\n#### Parameters\n- **`uid`**: The unique identifier for the download process obtained from the `/start` endpoint.\n\n#### Response\n```json\n{\n  \"status\": \"YOUTUBE-QUEUE\" | \"YOUTUBE-DOWNLOADING\" | \"YOUTUBE-ERROR\" | \"READY\" | \"DONE\" | \"CANCELED\",\n  \"targetFile\": \"filename\",\n  \"doneOrCanceledAt\": \"timestamp\",\n  \"onlyAudio\": boolean,\n  \"videoQuality\": \"quality\"\n}\n```\n- **`status`**: The current status of the download process.\n- **`targetFile`**: The name of the downloaded file.\n- **`doneOrCanceledAt`**: A timestamp indicating when the download was completed or canceled.\n- **`onlyAudio`**: Indicates if the download was for audio only.\n- **`videoQuality`**: The quality of the video that was downloaded.\n\n---\n\n### 3. Get result file(s)\n\n`GET /download/:uid`\n\nDownload the processed file once it's ready.\n\n#### Parameters\n- **`uid`**: The unique identifier for the download process obtained from the `/start` endpoint.\n\n#### Response\n- Returns a file stream that allows users to download the processed file.\n\n\n### Acknowledgments\nWe would like to express our gratitude to the following open-source projects for their invaluable contributions:\n- [gallofeliz/youtube-dl-webui](https://github.com/gallofeliz/youtube-dl-webui)\n- [gyt-dlp/yt-dlp](https://github.com/yt-dlp/yt-dlp)\n\n"
}